/*
 * datarhei Core API
 * Expose REST API for the datarhei Core
 *
 * OpenAPI spec version: 3.0
 * Contact: hello@datarhei.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import io.swagger.client.model.ApiProcessConfigIO;
import io.swagger.client.model.ApiProcessConfigLimits;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

/**
 * ApiProcessConfig
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2022-06-20T09:54:33.803Z")
public class ApiProcessConfig {
  @SerializedName("autostart")
  private Boolean autostart = null;

  @SerializedName("id")
  private String id = null;

  @SerializedName("input")
  private List<ApiProcessConfigIO> input = new ArrayList<ApiProcessConfigIO>();

  @SerializedName("limits")
  private ApiProcessConfigLimits limits = null;

  @SerializedName("options")
  private List<String> options = null;

  @SerializedName("output")
  private List<ApiProcessConfigIO> output = new ArrayList<ApiProcessConfigIO>();

  @SerializedName("reconnect")
  private Boolean reconnect = null;

  @SerializedName("reconnect_delay_seconds")
  private Integer reconnectDelaySeconds = null;

  @SerializedName("reference")
  private String reference = null;

  @SerializedName("stale_timeout_seconds")
  private Integer staleTimeoutSeconds = null;

  /**
   * Gets or Sets type
   */
  @JsonAdapter(TypeEnum.Adapter.class)
  public enum TypeEnum {
    FFMPEG("ffmpeg"),
    
    EMPTY("");

    private String value;

    TypeEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static TypeEnum fromValue(String text) {
      for (TypeEnum b : TypeEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }

    public static class Adapter extends TypeAdapter<TypeEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final TypeEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public TypeEnum read(final JsonReader jsonReader) throws IOException {
        String value = jsonReader.nextString();
        return TypeEnum.fromValue(String.valueOf(value));
      }
    }
  }

  @SerializedName("type")
  private TypeEnum type = null;

  public ApiProcessConfig autostart(Boolean autostart) {
    this.autostart = autostart;
    return this;
  }

   /**
   * Get autostart
   * @return autostart
  **/
  @ApiModelProperty(value = "")
  public Boolean isAutostart() {
    return autostart;
  }

  public void setAutostart(Boolean autostart) {
    this.autostart = autostart;
  }

  public ApiProcessConfig id(String id) {
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @ApiModelProperty(value = "")
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }

  public ApiProcessConfig input(List<ApiProcessConfigIO> input) {
    this.input = input;
    return this;
  }

  public ApiProcessConfig addInputItem(ApiProcessConfigIO inputItem) {
    this.input.add(inputItem);
    return this;
  }

   /**
   * Get input
   * @return input
  **/
  @ApiModelProperty(required = true, value = "")
  public List<ApiProcessConfigIO> getInput() {
    return input;
  }

  public void setInput(List<ApiProcessConfigIO> input) {
    this.input = input;
  }

  public ApiProcessConfig limits(ApiProcessConfigLimits limits) {
    this.limits = limits;
    return this;
  }

   /**
   * Get limits
   * @return limits
  **/
  @ApiModelProperty(value = "")
  public ApiProcessConfigLimits getLimits() {
    return limits;
  }

  public void setLimits(ApiProcessConfigLimits limits) {
    this.limits = limits;
  }

  public ApiProcessConfig options(List<String> options) {
    this.options = options;
    return this;
  }

  public ApiProcessConfig addOptionsItem(String optionsItem) {
    if (this.options == null) {
      this.options = new ArrayList<String>();
    }
    this.options.add(optionsItem);
    return this;
  }

   /**
   * Get options
   * @return options
  **/
  @ApiModelProperty(value = "")
  public List<String> getOptions() {
    return options;
  }

  public void setOptions(List<String> options) {
    this.options = options;
  }

  public ApiProcessConfig output(List<ApiProcessConfigIO> output) {
    this.output = output;
    return this;
  }

  public ApiProcessConfig addOutputItem(ApiProcessConfigIO outputItem) {
    this.output.add(outputItem);
    return this;
  }

   /**
   * Get output
   * @return output
  **/
  @ApiModelProperty(required = true, value = "")
  public List<ApiProcessConfigIO> getOutput() {
    return output;
  }

  public void setOutput(List<ApiProcessConfigIO> output) {
    this.output = output;
  }

  public ApiProcessConfig reconnect(Boolean reconnect) {
    this.reconnect = reconnect;
    return this;
  }

   /**
   * Get reconnect
   * @return reconnect
  **/
  @ApiModelProperty(value = "")
  public Boolean isReconnect() {
    return reconnect;
  }

  public void setReconnect(Boolean reconnect) {
    this.reconnect = reconnect;
  }

  public ApiProcessConfig reconnectDelaySeconds(Integer reconnectDelaySeconds) {
    this.reconnectDelaySeconds = reconnectDelaySeconds;
    return this;
  }

   /**
   * Get reconnectDelaySeconds
   * @return reconnectDelaySeconds
  **/
  @ApiModelProperty(value = "")
  public Integer getReconnectDelaySeconds() {
    return reconnectDelaySeconds;
  }

  public void setReconnectDelaySeconds(Integer reconnectDelaySeconds) {
    this.reconnectDelaySeconds = reconnectDelaySeconds;
  }

  public ApiProcessConfig reference(String reference) {
    this.reference = reference;
    return this;
  }

   /**
   * Get reference
   * @return reference
  **/
  @ApiModelProperty(value = "")
  public String getReference() {
    return reference;
  }

  public void setReference(String reference) {
    this.reference = reference;
  }

  public ApiProcessConfig staleTimeoutSeconds(Integer staleTimeoutSeconds) {
    this.staleTimeoutSeconds = staleTimeoutSeconds;
    return this;
  }

   /**
   * Get staleTimeoutSeconds
   * @return staleTimeoutSeconds
  **/
  @ApiModelProperty(value = "")
  public Integer getStaleTimeoutSeconds() {
    return staleTimeoutSeconds;
  }

  public void setStaleTimeoutSeconds(Integer staleTimeoutSeconds) {
    this.staleTimeoutSeconds = staleTimeoutSeconds;
  }

  public ApiProcessConfig type(TypeEnum type) {
    this.type = type;
    return this;
  }

   /**
   * Get type
   * @return type
  **/
  @ApiModelProperty(value = "")
  public TypeEnum getType() {
    return type;
  }

  public void setType(TypeEnum type) {
    this.type = type;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ApiProcessConfig apiProcessConfig = (ApiProcessConfig) o;
    return Objects.equals(this.autostart, apiProcessConfig.autostart) &&
        Objects.equals(this.id, apiProcessConfig.id) &&
        Objects.equals(this.input, apiProcessConfig.input) &&
        Objects.equals(this.limits, apiProcessConfig.limits) &&
        Objects.equals(this.options, apiProcessConfig.options) &&
        Objects.equals(this.output, apiProcessConfig.output) &&
        Objects.equals(this.reconnect, apiProcessConfig.reconnect) &&
        Objects.equals(this.reconnectDelaySeconds, apiProcessConfig.reconnectDelaySeconds) &&
        Objects.equals(this.reference, apiProcessConfig.reference) &&
        Objects.equals(this.staleTimeoutSeconds, apiProcessConfig.staleTimeoutSeconds) &&
        Objects.equals(this.type, apiProcessConfig.type);
  }

  @Override
  public int hashCode() {
    return Objects.hash(autostart, id, input, limits, options, output, reconnect, reconnectDelaySeconds, reference, staleTimeoutSeconds, type);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ApiProcessConfig {\n");
    
    sb.append("    autostart: ").append(toIndentedString(autostart)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    input: ").append(toIndentedString(input)).append("\n");
    sb.append("    limits: ").append(toIndentedString(limits)).append("\n");
    sb.append("    options: ").append(toIndentedString(options)).append("\n");
    sb.append("    output: ").append(toIndentedString(output)).append("\n");
    sb.append("    reconnect: ").append(toIndentedString(reconnect)).append("\n");
    sb.append("    reconnectDelaySeconds: ").append(toIndentedString(reconnectDelaySeconds)).append("\n");
    sb.append("    reference: ").append(toIndentedString(reference)).append("\n");
    sb.append("    staleTimeoutSeconds: ").append(toIndentedString(staleTimeoutSeconds)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

