/*
 * datarhei Core API
 * Expose REST API for the datarhei Core
 *
 * OpenAPI spec version: 3.0
 * Contact: hello@datarhei.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import io.swagger.client.model.ApiProgress;
import java.io.IOException;
import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.List;

/**
 * ApiProcessState
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2022-06-20T09:54:33.803Z")
public class ApiProcessState {
  @SerializedName("command")
  private List<String> command = null;

  @SerializedName("cpu_usage")
  private BigDecimal cpuUsage = null;

  @SerializedName("exec")
  private String exec = null;

  @SerializedName("last_logline")
  private String lastLogline = null;

  @SerializedName("memory_bytes")
  private Integer memoryBytes = null;

  @SerializedName("order")
  private String order = null;

  @SerializedName("progress")
  private ApiProgress progress = null;

  @SerializedName("reconnect_seconds")
  private Integer reconnectSeconds = null;

  @SerializedName("runtime_seconds")
  private Integer runtimeSeconds = null;

  public ApiProcessState command(List<String> command) {
    this.command = command;
    return this;
  }

  public ApiProcessState addCommandItem(String commandItem) {
    if (this.command == null) {
      this.command = new ArrayList<String>();
    }
    this.command.add(commandItem);
    return this;
  }

   /**
   * Get command
   * @return command
  **/
  @ApiModelProperty(value = "")
  public List<String> getCommand() {
    return command;
  }

  public void setCommand(List<String> command) {
    this.command = command;
  }

  public ApiProcessState cpuUsage(BigDecimal cpuUsage) {
    this.cpuUsage = cpuUsage;
    return this;
  }

   /**
   * Get cpuUsage
   * @return cpuUsage
  **/
  @ApiModelProperty(value = "")
  public BigDecimal getCpuUsage() {
    return cpuUsage;
  }

  public void setCpuUsage(BigDecimal cpuUsage) {
    this.cpuUsage = cpuUsage;
  }

  public ApiProcessState exec(String exec) {
    this.exec = exec;
    return this;
  }

   /**
   * Get exec
   * @return exec
  **/
  @ApiModelProperty(value = "")
  public String getExec() {
    return exec;
  }

  public void setExec(String exec) {
    this.exec = exec;
  }

  public ApiProcessState lastLogline(String lastLogline) {
    this.lastLogline = lastLogline;
    return this;
  }

   /**
   * Get lastLogline
   * @return lastLogline
  **/
  @ApiModelProperty(value = "")
  public String getLastLogline() {
    return lastLogline;
  }

  public void setLastLogline(String lastLogline) {
    this.lastLogline = lastLogline;
  }

  public ApiProcessState memoryBytes(Integer memoryBytes) {
    this.memoryBytes = memoryBytes;
    return this;
  }

   /**
   * Get memoryBytes
   * @return memoryBytes
  **/
  @ApiModelProperty(value = "")
  public Integer getMemoryBytes() {
    return memoryBytes;
  }

  public void setMemoryBytes(Integer memoryBytes) {
    this.memoryBytes = memoryBytes;
  }

  public ApiProcessState order(String order) {
    this.order = order;
    return this;
  }

   /**
   * Get order
   * @return order
  **/
  @ApiModelProperty(value = "")
  public String getOrder() {
    return order;
  }

  public void setOrder(String order) {
    this.order = order;
  }

  public ApiProcessState progress(ApiProgress progress) {
    this.progress = progress;
    return this;
  }

   /**
   * Get progress
   * @return progress
  **/
  @ApiModelProperty(value = "")
  public ApiProgress getProgress() {
    return progress;
  }

  public void setProgress(ApiProgress progress) {
    this.progress = progress;
  }

  public ApiProcessState reconnectSeconds(Integer reconnectSeconds) {
    this.reconnectSeconds = reconnectSeconds;
    return this;
  }

   /**
   * Get reconnectSeconds
   * @return reconnectSeconds
  **/
  @ApiModelProperty(value = "")
  public Integer getReconnectSeconds() {
    return reconnectSeconds;
  }

  public void setReconnectSeconds(Integer reconnectSeconds) {
    this.reconnectSeconds = reconnectSeconds;
  }

  public ApiProcessState runtimeSeconds(Integer runtimeSeconds) {
    this.runtimeSeconds = runtimeSeconds;
    return this;
  }

   /**
   * Get runtimeSeconds
   * @return runtimeSeconds
  **/
  @ApiModelProperty(value = "")
  public Integer getRuntimeSeconds() {
    return runtimeSeconds;
  }

  public void setRuntimeSeconds(Integer runtimeSeconds) {
    this.runtimeSeconds = runtimeSeconds;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ApiProcessState apiProcessState = (ApiProcessState) o;
    return Objects.equals(this.command, apiProcessState.command) &&
        Objects.equals(this.cpuUsage, apiProcessState.cpuUsage) &&
        Objects.equals(this.exec, apiProcessState.exec) &&
        Objects.equals(this.lastLogline, apiProcessState.lastLogline) &&
        Objects.equals(this.memoryBytes, apiProcessState.memoryBytes) &&
        Objects.equals(this.order, apiProcessState.order) &&
        Objects.equals(this.progress, apiProcessState.progress) &&
        Objects.equals(this.reconnectSeconds, apiProcessState.reconnectSeconds) &&
        Objects.equals(this.runtimeSeconds, apiProcessState.runtimeSeconds);
  }

  @Override
  public int hashCode() {
    return Objects.hash(command, cpuUsage, exec, lastLogline, memoryBytes, order, progress, reconnectSeconds, runtimeSeconds);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ApiProcessState {\n");
    
    sb.append("    command: ").append(toIndentedString(command)).append("\n");
    sb.append("    cpuUsage: ").append(toIndentedString(cpuUsage)).append("\n");
    sb.append("    exec: ").append(toIndentedString(exec)).append("\n");
    sb.append("    lastLogline: ").append(toIndentedString(lastLogline)).append("\n");
    sb.append("    memoryBytes: ").append(toIndentedString(memoryBytes)).append("\n");
    sb.append("    order: ").append(toIndentedString(order)).append("\n");
    sb.append("    progress: ").append(toIndentedString(progress)).append("\n");
    sb.append("    reconnectSeconds: ").append(toIndentedString(reconnectSeconds)).append("\n");
    sb.append("    runtimeSeconds: ").append(toIndentedString(runtimeSeconds)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

