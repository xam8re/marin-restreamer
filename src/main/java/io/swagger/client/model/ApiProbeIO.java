/*
 * datarhei Core API
 * Expose REST API for the datarhei Core
 *
 * OpenAPI spec version: 3.0
 * Contact: hello@datarhei.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.math.BigDecimal;

/**
 * ApiProbeIO
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2022-06-20T09:54:33.803Z")
public class ApiProbeIO {
  @SerializedName("bitrate_kbps")
  private BigDecimal bitrateKbps = null;

  @SerializedName("channels")
  private Integer channels = null;

  @SerializedName("codec")
  private String codec = null;

  @SerializedName("coder")
  private String coder = null;

  @SerializedName("duration_sec")
  private BigDecimal durationSec = null;

  @SerializedName("format")
  private String format = null;

  @SerializedName("fps")
  private BigDecimal fps = null;

  @SerializedName("height")
  private Integer height = null;

  @SerializedName("index")
  private Integer index = null;

  @SerializedName("language")
  private String language = null;

  @SerializedName("layout")
  private String layout = null;

  @SerializedName("pix_fmt")
  private String pixFmt = null;

  @SerializedName("sampling_hz")
  private Integer samplingHz = null;

  @SerializedName("stream")
  private Integer stream = null;

  @SerializedName("type")
  private String type = null;

  @SerializedName("url")
  private String url = null;

  @SerializedName("width")
  private Integer width = null;

  public ApiProbeIO bitrateKbps(BigDecimal bitrateKbps) {
    this.bitrateKbps = bitrateKbps;
    return this;
  }

   /**
   * Get bitrateKbps
   * @return bitrateKbps
  **/
  @ApiModelProperty(value = "")
  public BigDecimal getBitrateKbps() {
    return bitrateKbps;
  }

  public void setBitrateKbps(BigDecimal bitrateKbps) {
    this.bitrateKbps = bitrateKbps;
  }

  public ApiProbeIO channels(Integer channels) {
    this.channels = channels;
    return this;
  }

   /**
   * Get channels
   * @return channels
  **/
  @ApiModelProperty(value = "")
  public Integer getChannels() {
    return channels;
  }

  public void setChannels(Integer channels) {
    this.channels = channels;
  }

  public ApiProbeIO codec(String codec) {
    this.codec = codec;
    return this;
  }

   /**
   * Get codec
   * @return codec
  **/
  @ApiModelProperty(value = "")
  public String getCodec() {
    return codec;
  }

  public void setCodec(String codec) {
    this.codec = codec;
  }

  public ApiProbeIO coder(String coder) {
    this.coder = coder;
    return this;
  }

   /**
   * Get coder
   * @return coder
  **/
  @ApiModelProperty(value = "")
  public String getCoder() {
    return coder;
  }

  public void setCoder(String coder) {
    this.coder = coder;
  }

  public ApiProbeIO durationSec(BigDecimal durationSec) {
    this.durationSec = durationSec;
    return this;
  }

   /**
   * Get durationSec
   * @return durationSec
  **/
  @ApiModelProperty(value = "")
  public BigDecimal getDurationSec() {
    return durationSec;
  }

  public void setDurationSec(BigDecimal durationSec) {
    this.durationSec = durationSec;
  }

  public ApiProbeIO format(String format) {
    this.format = format;
    return this;
  }

   /**
   * Get format
   * @return format
  **/
  @ApiModelProperty(value = "")
  public String getFormat() {
    return format;
  }

  public void setFormat(String format) {
    this.format = format;
  }

  public ApiProbeIO fps(BigDecimal fps) {
    this.fps = fps;
    return this;
  }

   /**
   * video
   * @return fps
  **/
  @ApiModelProperty(value = "video")
  public BigDecimal getFps() {
    return fps;
  }

  public void setFps(BigDecimal fps) {
    this.fps = fps;
  }

  public ApiProbeIO height(Integer height) {
    this.height = height;
    return this;
  }

   /**
   * Get height
   * @return height
  **/
  @ApiModelProperty(value = "")
  public Integer getHeight() {
    return height;
  }

  public void setHeight(Integer height) {
    this.height = height;
  }

  public ApiProbeIO index(Integer index) {
    this.index = index;
    return this;
  }

   /**
   * Get index
   * @return index
  **/
  @ApiModelProperty(value = "")
  public Integer getIndex() {
    return index;
  }

  public void setIndex(Integer index) {
    this.index = index;
  }

  public ApiProbeIO language(String language) {
    this.language = language;
    return this;
  }

   /**
   * Get language
   * @return language
  **/
  @ApiModelProperty(value = "")
  public String getLanguage() {
    return language;
  }

  public void setLanguage(String language) {
    this.language = language;
  }

  public ApiProbeIO layout(String layout) {
    this.layout = layout;
    return this;
  }

   /**
   * Get layout
   * @return layout
  **/
  @ApiModelProperty(value = "")
  public String getLayout() {
    return layout;
  }

  public void setLayout(String layout) {
    this.layout = layout;
  }

  public ApiProbeIO pixFmt(String pixFmt) {
    this.pixFmt = pixFmt;
    return this;
  }

   /**
   * Get pixFmt
   * @return pixFmt
  **/
  @ApiModelProperty(value = "")
  public String getPixFmt() {
    return pixFmt;
  }

  public void setPixFmt(String pixFmt) {
    this.pixFmt = pixFmt;
  }

  public ApiProbeIO samplingHz(Integer samplingHz) {
    this.samplingHz = samplingHz;
    return this;
  }

   /**
   * audio
   * @return samplingHz
  **/
  @ApiModelProperty(value = "audio")
  public Integer getSamplingHz() {
    return samplingHz;
  }

  public void setSamplingHz(Integer samplingHz) {
    this.samplingHz = samplingHz;
  }

  public ApiProbeIO stream(Integer stream) {
    this.stream = stream;
    return this;
  }

   /**
   * Get stream
   * @return stream
  **/
  @ApiModelProperty(value = "")
  public Integer getStream() {
    return stream;
  }

  public void setStream(Integer stream) {
    this.stream = stream;
  }

  public ApiProbeIO type(String type) {
    this.type = type;
    return this;
  }

   /**
   * Get type
   * @return type
  **/
  @ApiModelProperty(value = "")
  public String getType() {
    return type;
  }

  public void setType(String type) {
    this.type = type;
  }

  public ApiProbeIO url(String url) {
    this.url = url;
    return this;
  }

   /**
   * common
   * @return url
  **/
  @ApiModelProperty(value = "common")
  public String getUrl() {
    return url;
  }

  public void setUrl(String url) {
    this.url = url;
  }

  public ApiProbeIO width(Integer width) {
    this.width = width;
    return this;
  }

   /**
   * Get width
   * @return width
  **/
  @ApiModelProperty(value = "")
  public Integer getWidth() {
    return width;
  }

  public void setWidth(Integer width) {
    this.width = width;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ApiProbeIO apiProbeIO = (ApiProbeIO) o;
    return Objects.equals(this.bitrateKbps, apiProbeIO.bitrateKbps) &&
        Objects.equals(this.channels, apiProbeIO.channels) &&
        Objects.equals(this.codec, apiProbeIO.codec) &&
        Objects.equals(this.coder, apiProbeIO.coder) &&
        Objects.equals(this.durationSec, apiProbeIO.durationSec) &&
        Objects.equals(this.format, apiProbeIO.format) &&
        Objects.equals(this.fps, apiProbeIO.fps) &&
        Objects.equals(this.height, apiProbeIO.height) &&
        Objects.equals(this.index, apiProbeIO.index) &&
        Objects.equals(this.language, apiProbeIO.language) &&
        Objects.equals(this.layout, apiProbeIO.layout) &&
        Objects.equals(this.pixFmt, apiProbeIO.pixFmt) &&
        Objects.equals(this.samplingHz, apiProbeIO.samplingHz) &&
        Objects.equals(this.stream, apiProbeIO.stream) &&
        Objects.equals(this.type, apiProbeIO.type) &&
        Objects.equals(this.url, apiProbeIO.url) &&
        Objects.equals(this.width, apiProbeIO.width);
  }

  @Override
  public int hashCode() {
    return Objects.hash(bitrateKbps, channels, codec, coder, durationSec, format, fps, height, index, language, layout, pixFmt, samplingHz, stream, type, url, width);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ApiProbeIO {\n");
    
    sb.append("    bitrateKbps: ").append(toIndentedString(bitrateKbps)).append("\n");
    sb.append("    channels: ").append(toIndentedString(channels)).append("\n");
    sb.append("    codec: ").append(toIndentedString(codec)).append("\n");
    sb.append("    coder: ").append(toIndentedString(coder)).append("\n");
    sb.append("    durationSec: ").append(toIndentedString(durationSec)).append("\n");
    sb.append("    format: ").append(toIndentedString(format)).append("\n");
    sb.append("    fps: ").append(toIndentedString(fps)).append("\n");
    sb.append("    height: ").append(toIndentedString(height)).append("\n");
    sb.append("    index: ").append(toIndentedString(index)).append("\n");
    sb.append("    language: ").append(toIndentedString(language)).append("\n");
    sb.append("    layout: ").append(toIndentedString(layout)).append("\n");
    sb.append("    pixFmt: ").append(toIndentedString(pixFmt)).append("\n");
    sb.append("    samplingHz: ").append(toIndentedString(samplingHz)).append("\n");
    sb.append("    stream: ").append(toIndentedString(stream)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    url: ").append(toIndentedString(url)).append("\n");
    sb.append("    width: ").append(toIndentedString(width)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

